{"version":3,"sources":["webpack:///./doc/loaders/md-loader.js?716b"],"names":["template","async","Date","toLocaleString","Promise","r","setTimeout","count","code"],"mappings":"yMAkBO,MAAMA,EAAW,GAAI,QAAQ,YAXpCC,kBACE,aAGQ,qBAAW,GAAI;WACf,IAAIC,MAAOC;cACN,cACL,IAAIC,QAAQC,GAAKC,WAAWD,EAAE,MAISE,MAE9BC,EAAO","file":"2.js","sourcesContent":["\n      \nimport {html} from 'lit-html'\nimport {asyncReplace} from 'lit-html/directives/async-replace.js';\nimport {transition, land} from 'lit-transition';\n\n// generates a new date once a second\nasync function* count() {\n  while (true) {\n    // wrapping a template using transition directive will\n    // automatically animate it on change\n    yield transition(html`<div style=\"display: inline-block\">\n        ${new Date().toLocaleString()}\n      </div>`, land);\n    await new Promise(r => setTimeout(r,1000));\n  }\n}\n// asyncReplace directive updates on as generator yields\nexport const template = html`lit! ${asyncReplace(count())}`;\n\n      export const code = \"\\nimport {html} from 'lit-html'\\nimport {asyncReplace} from 'lit-html/directives/async-replace.js';\\nimport {transition, land} from 'lit-transition';\\n\\n// generates a new date once a second\\nasync function* count() {\\n  while (true) {\\n    // wrapping a template using transition directive will\\n    // automatically animate it on change\\n    yield transition(html`<div style=\\\"display: inline-block\\\">\\n        ${new Date().toLocaleString()}\\n      </div>`, land);\\n    await new Promise(r => setTimeout(r,1000));\\n  }\\n}\\n// asyncReplace directive updates on as generator yields\\nexport const template = html`lit! ${asyncReplace(count())}`;\\n\";\n    "],"sourceRoot":""}