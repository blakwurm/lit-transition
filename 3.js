(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{213:function(t,n,e){"use strict";e.r(n),e.d(n,"Comp",(function(){return s})),e.d(n,"code",(function(){return a}));var r=e(5),i=e(7);class s extends r.a{static get properties(){return{a:Boolean}}get swapped(){return Object(i.transition)(this.a?r.c`<h2>Cool stuff!</h2>`:r.c`<h2>Click me</h2>`)}render(){return r.c`<center @click=${()=>this.a=!this.a}>
      ${this.swapped}
    </center>`}}const a="\nimport {LitElement, html} from 'lit-element';\nimport {transition} from 'lit-transition';\n\nexport class Comp extends LitElement {\n  // a prop that we toggle and what will trigger redraw\n  static get properties() { return { a: Boolean } }\n\n  // swapped template is transitioned automatically\n  get swapped() {\n    return transition( // <- this is all!\n      this.a ? html`<h2>Cool stuff!</h2>` \n             : html`<h2>Click me</h2>`\n    );\n  }\n  \n  render() {\n    return html`<center @click=${() => this.a = !this.a}>\n      ${this.swapped}\n    </center>`\n  } \n}\n"}}]);
//# sourceMappingURL=3.js.map