{"version":3,"sources":["webpack:///./doc/loaders/md-loader.js?1a2c"],"names":["spin3D","mode","css","Comp","a","Boolean","this","crazy","code"],"mappings":"6LAKA,MAAMA,EAAS,CACbC,KAAM,SACNC,IAAK,qcAoBA,MAAMC,UAAa,IAExB,wBAA0B,MAAO,CAAEC,EAAGC,SAGtC,YACE,OAAO,qBACLC,KAAKF,EAAI,GAAI,oBACJ,GAAI,oBACbJ,GAGJ,SACE,OAAO,GAAI,kBAAkB,IAAMM,KAAKF,GAAKE,KAAKF;QAC9CE,KAAKC;gBAKA,MAAMC,EAAO","file":"8.js","sourcesContent":["\n      \nimport {LitElement, html, css} from 'lit-element';\nimport {transition} from 'lit-transition';\n\nconst spin3D = {\n  mode: 'out-in',\n  css: `\n    .enter-active, .leave-active {\n      transition: all 0.2s linear;\n    }\n    .enter-from {\n      opacity: 0.1;\n      filter: blur(1px);\n      transform: rotate3d(1, 0, 0.5, 180deg) scale(2);\n    }\n    .enter-to, .leave-from {\n      opacity: initial;\n      filter: initial;\n      transform: initial;\n    }\n    .leave-to {\n      opacity: 0.1;\n      filter: blur(2px);\n      transform: rotate3d(1, 0, 0.5, -180deg) scale(2);\n    }`\n}\nexport class Comp extends LitElement {\n  // a prop that we toggle and what will trigger redraw\n  static get properties() { return { a: Boolean } }\n\n  // swapped template is transitioned automatically\n  get crazy() {\n    return transition( // <- this is all!\n      this.a ? html`<h2>DIZZZZY!</h2>` \n             : html`<h2>Click me</h2>`,\n      spin3D);\n  }\n  \n  render() {\n    return html`<center @click=${() => this.a = !this.a}>\n      ${this.crazy}\n    </center>`\n  } \n}\n\n      export const code = \"\\nimport {LitElement, html, css} from 'lit-element';\\nimport {transition} from 'lit-transition';\\n\\nconst spin3D = {\\n  mode: 'out-in',\\n  css: `\\n    .enter-active, .leave-active {\\n      transition: all 0.2s linear;\\n    }\\n    .enter-from {\\n      opacity: 0.1;\\n      filter: blur(1px);\\n      transform: rotate3d(1, 0, 0.5, 180deg) scale(2);\\n    }\\n    .enter-to, .leave-from {\\n      opacity: initial;\\n      filter: initial;\\n      transform: initial;\\n    }\\n    .leave-to {\\n      opacity: 0.1;\\n      filter: blur(2px);\\n      transform: rotate3d(1, 0, 0.5, -180deg) scale(2);\\n    }`\\n}\\nexport class Comp extends LitElement {\\n  // a prop that we toggle and what will trigger redraw\\n  static get properties() { return { a: Boolean } }\\n\\n  // swapped template is transitioned automatically\\n  get crazy() {\\n    return transition( // <- this is all!\\n      this.a ? html`<h2>DIZZZZY!</h2>` \\n             : html`<h2>Click me</h2>`,\\n      spin3D);\\n  }\\n  \\n  render() {\\n    return html`<center @click=${() => this.a = !this.a}>\\n      ${this.crazy}\\n    </center>`\\n  } \\n}\\n\";\n    "],"sourceRoot":""}