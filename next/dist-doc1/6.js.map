{"version":3,"sources":["webpack:///./doc/loaders/md-loader.js?d385"],"names":["Comp","a","Boolean","u","this","unrelated","code"],"mappings":"6LAKO,MAAMA,UAAa,IACxB,oBAAsB,OAAO,GAAG;;;OAKhC,wBACE,MAAO,CACLC,EAAGC,QACHC,EAAGD,SAIP,gBACE,OAAOE,KAAKD,EAAI,IAAM,IAGxB,SAGE,OAAO,GAAI;qBACM,IAAMC,KAAKH,GAAKG,KAAKH;qBACrB,IAAMG,KAAKD,GAAKC,KAAKD;WAC/B,qBAAWC,KAAKH,EACjB,GAAI,QAAQG,KAAKC,kBACjB,GAAI,wBAAwBD,KAAKC,kBACrC,kBAIO,MAAMC,EAAO","file":"6.js","sourcesContent":["\n      \nimport { LitElement, html, css } from 'lit-element';\nimport { transition, slide } from 'lit-transition';\n\nexport class Comp extends LitElement {\n  static get styles() { return css`\n    .two {\n      background: red;\n    }`;\n  }\n  static get properties() {\n    return { \n      a: Boolean, // to toggle content\n      u: Boolean // effects unrelated content\n    }\n  }\n\n  get unrelated() {\n    return this.u ? 'A' : 'B';\n  }\n\n  render() {\n    // changing this.u and in turn this.unrelated\n    // will re-trigger the transition\n    return html`\n    <button @click=${() => this.a = !this.a}>change transitioned content</button>\n    <button @click=${() => this.u = !this.u}>change unrelated content (should not transition)</button>\n    <div>${transition(this.a\n        ? html`<div>${this.unrelated}</div>`\n        : html`<div class=\"two\">TWO ${this.unrelated}</div>`\n    , slide)}</div>`;\n  } \n}\n\n      export const code = \"\\nimport { LitElement, html, css } from 'lit-element';\\nimport { transition, slide } from 'lit-transition';\\n\\nexport class Comp extends LitElement {\\n  static get styles() { return css`\\n    .two {\\n      background: red;\\n    }`;\\n  }\\n  static get properties() {\\n    return { \\n      a: Boolean, // to toggle content\\n      u: Boolean // effects unrelated content\\n    }\\n  }\\n\\n  get unrelated() {\\n    return this.u ? 'A' : 'B';\\n  }\\n\\n  render() {\\n    // changing this.u and in turn this.unrelated\\n    // will re-trigger the transition\\n    return html`\\n    <button @click=${() => this.a = !this.a}>change transitioned content</button>\\n    <button @click=${() => this.u = !this.u}>change unrelated content (should not transition)</button>\\n    <div>${transition(this.a\\n        ? html`<div>${this.unrelated}</div>`\\n        : html`<div class=\\\"two\\\">TWO ${this.unrelated}</div>`\\n    , slide)}</div>`;\\n  } \\n}\\n\";\n    "],"sourceRoot":""}