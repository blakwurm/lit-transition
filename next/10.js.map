{"version":3,"sources":["webpack:///./doc/loaders/md-loader.js?13df"],"names":["swirl","mode","enter","leave","Comp","a","Boolean","this","code"],"mappings":"8LAKA,MAAMA,EAAQ,CACZC,KAAM,SACNC,MAAO,cACPC,MAAO,CAAC,gBAGH,MAAMC,UAAa,IAExB,wBAA0B,MAAO,CAAEC,EAAGC,SACtC,oBACE,OAAO,GAAG;;;;;;;;;;;;;;;;OAmBZ,SACE,OAAO,GAAI,kBAAkB,IAAMC,KAAKF,GAAKE,KAAKF,KAChD,qBACEE,KAAKF,EAAI,GAAI,mBACN,GAAI,oBACXL,eAKK,MAAMQ,EAAO","file":"10.js","sourcesContent":["\n      \nimport {LitElement, html, css} from 'lit-element';\nimport {transition} from 'lit-transition';\n\nconst swirl = {\n  mode: 'out-in',\n  enter: 'swirl-enter',\n  leave: ['swirl-leave', /* more if needed */ ]\n}\n\nexport class Comp extends LitElement {\n  // a prop that we toggle and what will trigger redraw\n  static get properties() { return { a: Boolean } }\n  static get styles() {\n    return css`\n    .swirl-enter {\n      animation: swirl .35s;\n    }\n    .swirl-leave {\n      animation: swirl .35s reverse;\n    }\n    @keyframes swirl {\n      0% {\n        transform: scale(3.0) rotate(600deg);\n        filter: blur(3px);\n        opacity: 0;\n      }\n      100% {\n        transform: scale(1);\n      }\n    }`\n  }\n\n  render() {\n    return html`<center @click=${() => this.a = !this.a}>${\n      transition( \n        this.a ? html`<h2>WROOHM!</h2>` \n             : html`<h2>Click me</h2>`,\n        swirl)\n      }</center>`;\n  } \n}\n\n      export const code = \"\\nimport {LitElement, html, css} from 'lit-element';\\nimport {transition} from 'lit-transition';\\n\\nconst swirl = {\\n  mode: 'out-in',\\n  enter: 'swirl-enter',\\n  leave: ['swirl-leave', /* more if needed */ ]\\n}\\n\\nexport class Comp extends LitElement {\\n  // a prop that we toggle and what will trigger redraw\\n  static get properties() { return { a: Boolean } }\\n  static get styles() {\\n    return css`\\n    .swirl-enter {\\n      animation: swirl .35s;\\n    }\\n    .swirl-leave {\\n      animation: swirl .35s reverse;\\n    }\\n    @keyframes swirl {\\n      0% {\\n        transform: scale(3.0) rotate(600deg);\\n        filter: blur(3px);\\n        opacity: 0;\\n      }\\n      100% {\\n        transform: scale(1);\\n      }\\n    }`\\n  }\\n\\n  render() {\\n    return html`<center @click=${() => this.a = !this.a}>${\\n      transition( \\n        this.a ? html`<h2>WROOHM!</h2>` \\n             : html`<h2>Click me</h2>`,\\n        swirl)\\n      }</center>`;\\n  } \\n}\\n\";\n    "],"sourceRoot":""}