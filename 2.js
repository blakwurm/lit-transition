(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{212:function(n,t,e){"use strict";e.r(t),e.d(t,"template",(function(){return l})),e.d(t,"code",(function(){return c}));var i=e(0),a=e(16),o=e(7);const l=i.d`lit! ${Object(a.a)(async function*(){for(;;)yield Object(o.transition)(i.d`<div style="display: inline-block">
        ${(new Date).toLocaleString()}
      </div>`,o.land),await new Promise(n=>setTimeout(n,1e3))}())}`,c="\nimport {html} from 'lit-html'\nimport {asyncReplace} from 'lit-html/directives/async-replace.js';\nimport {transition, land} from 'lit-transition';\n\n// generates a new date once a second\nasync function* count() {\n  while (true) {\n    // wrapping a template using transition directive will\n    // automatically animate it on change\n    yield transition(html`<div style=\"display: inline-block\">\n        ${new Date().toLocaleString()}\n      </div>`, land);\n    await new Promise(r => setTimeout(r,1000));\n  }\n}\n// asyncReplace directive updates on as generator yields\nexport const template = html`lit! ${asyncReplace(count())}`;\n"}}]);
//# sourceMappingURL=2.js.map