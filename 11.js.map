{"version":3,"sources":["webpack:///./doc/loaders/md-loader.js?6c26"],"names":["builtins","slide","fade","land","Comp","a","Boolean","choice","Object","super","this","e","target","value","select","values","map","b","name","code"],"mappings":"8LAWA,MAAMA,EAAW,CAACC,MAAA,QAAMC,KAAA,OAAKC,KAAA,QAEtB,MAAMC,UAAa,IACxB,wBACE,MAAO,CACLC,EAAGC,QACHC,OAAQC,QAIZ,cACEC,QACAC,KAAKH,OAAS,QAIhB,OAAOI,GACLD,KAAKH,OAASP,EAASW,EAAEC,OAAOC,OAChCH,KAAKL,GAAKK,KAAKL,EAGjB,SAEE,OAAO,GAAI;sBACOK,KAAKI,UACrBN,OAAOO,OAAOf,GAAUgB,IAAIC,GAAK,GAAI,iBAAiBA,EAAEC,QAAQD,EAAEC;kBAEtD,IAAMR,KAAKL,GAAKK,KAAKL;;mBAEpB,qBACbK,KAAKL,EAAI,YAAc,YACvBK,KAAKH,iBAKE,MAAMY,EAAO","file":"11.js","sourcesContent":["\n      \nimport { LitElement, html } from 'lit-element';\nimport {\n  transition,\n  slide,\n  fade,\n  land\n} from 'lit-transition';\n\n// our built-in animations\nconst builtins = {slide,fade,land};\n\nexport class Comp extends LitElement {\n  static get properties() {\n    return { \n      a: Boolean, // to toggle content\n      choice: Object // for transition mode\n    }\n  }\n  // initialize component\n  constructor() {\n    super();\n    this.choice = slide;\n  }\n\n  // sets mode and swaps transitioned content\n  select(e) {\n    this.choice = builtins[e.target.value];\n    this.a = !this.a;\n  }\n\n  render() {\n    // animates with different modes\n    return html`click to transition\n    <select @change=${this.select}>${\n      Object.values(builtins).map(b => html`<option value=${b.name}>${b.name}</option>`)\n    }</select>\n    <div @click=${() => this.a = !this.a}\n      style=\"margin: 20px; font-size: 30px\">\n    click to lit ${transition(\n      this.a ? 'CONTENT A' : 'CONTENT B',\n      this.choice\n    )}</div>`;\n  } \n}\n\n      export const code = \"\\nimport { LitElement, html } from 'lit-element';\\nimport {\\n  transition,\\n  slide,\\n  fade,\\n  land\\n} from 'lit-transition';\\n\\n// our built-in animations\\nconst builtins = {slide,fade,land};\\n\\nexport class Comp extends LitElement {\\n  static get properties() {\\n    return { \\n      a: Boolean, // to toggle content\\n      choice: Object // for transition mode\\n    }\\n  }\\n  // initialize component\\n  constructor() {\\n    super();\\n    this.choice = slide;\\n  }\\n\\n  // sets mode and swaps transitioned content\\n  select(e) {\\n    this.choice = builtins[e.target.value];\\n    this.a = !this.a;\\n  }\\n\\n  render() {\\n    // animates with different modes\\n    return html`click to transition\\n    <select @change=${this.select}>${\\n      Object.values(builtins).map(b => html`<option value=${b.name}>${b.name}</option>`)\\n    }</select>\\n    <div @click=${() => this.a = !this.a}\\n      style=\\\"margin: 20px; font-size: 30px\\\">\\n    click to lit ${transition(\\n      this.a ? 'CONTENT A' : 'CONTENT B',\\n      this.choice\\n    )}</div>`;\\n  } \\n}\\n\";\n    "],"sourceRoot":""}