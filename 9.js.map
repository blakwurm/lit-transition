{"version":3,"sources":["webpack:///./doc/loaders/md-loader.js?84d1"],"names":["spin3D","mode","enter","active","from","to","leave","Comp","a","Boolean","this","crazy","code"],"mappings":"6LAKA,MAAMA,EAAS,CACbC,KAAM,SACNC,MAAO,CACLC,OAAQ,OACRC,KAAM,aACNC,GAAI,aAENC,MAAO,CACLH,OAAQ,OACRC,KAAM,YACNC,GAAI,eAGD,MAAME,UAAa,IAExB,wBAA0B,MAAO,CAAEC,EAAGC,SACtC,oBACE,OAAO,GAAG;;;;;;;;;;;;;;;;;;OAsBZ,YACE,OAAO,qBACLC,KAAKF,EAAI,GAAI,oBACJ,GAAI,oBACbR,GAGJ,SACE,OAAO,GAAI,kBAAkB,IAAMU,KAAKF,GAAKE,KAAKF;QAC9CE,KAAKC;gBAKA,MAAMC,EAAO","file":"9.js","sourcesContent":["\n      \nimport {LitElement, html, css} from 'lit-element';\nimport {transition} from 'lit-transition';\n\nconst spin3D = {\n  mode: 'out-in',\n  enter: {\n    active: 'spin', \n    from: 'spin-enter',\n    to: 'spin-show',\n  },\n  leave: {\n    active: 'spin', // same class as active phase of enter\n    from: 'spin-show', // .. this one too!\n    to: 'spin-leave',\n  }\n}\nexport class Comp extends LitElement {\n  // a prop that we toggle and what will trigger redraw\n  static get properties() { return { a: Boolean } }\n  static get styles() {\n    return css`\n    .spin {\n      transition: all 0.3s ease-in;\n    }\n    .spin-enter {\n      opacity: 0.1;\n      filter: blur(1px);\n      transform: rotate3d(0, 1, 0, 360deg) scale(4);\n    }\n    .spin-show {\n      opacity: initial;\n      filter: initial;\n      transform: initial;\n    }\n    .spin-leave {\n      opacity: 0.1;\n      filter: blur(1px);\n      transform: rotate3d(0, 1, 0, -360deg) scale(4);\n    }`\n  }\n\n  // swapped template is transitioned automatically\n  get crazy() {\n    return transition( // <- this is all!\n      this.a ? html`<h2>DIZZZZY!</h2>` \n             : html`<h2>Click me</h2>`,\n      spin3D);\n  }\n  \n  render() {\n    return html`<center @click=${() => this.a = !this.a}>\n      ${this.crazy}\n    </center>`\n  } \n}\n\n      export const code = \"\\nimport {LitElement, html, css} from 'lit-element';\\nimport {transition} from 'lit-transition';\\n\\nconst spin3D = {\\n  mode: 'out-in',\\n  enter: {\\n    active: 'spin', \\n    from: 'spin-enter',\\n    to: 'spin-show',\\n  },\\n  leave: {\\n    active: 'spin', // same class as active phase of enter\\n    from: 'spin-show', // .. this one too!\\n    to: 'spin-leave',\\n  }\\n}\\nexport class Comp extends LitElement {\\n  // a prop that we toggle and what will trigger redraw\\n  static get properties() { return { a: Boolean } }\\n  static get styles() {\\n    return css`\\n    .spin {\\n      transition: all 0.3s ease-in;\\n    }\\n    .spin-enter {\\n      opacity: 0.1;\\n      filter: blur(1px);\\n      transform: rotate3d(0, 1, 0, 360deg) scale(4);\\n    }\\n    .spin-show {\\n      opacity: initial;\\n      filter: initial;\\n      transform: initial;\\n    }\\n    .spin-leave {\\n      opacity: 0.1;\\n      filter: blur(1px);\\n      transform: rotate3d(0, 1, 0, -360deg) scale(4);\\n    }`\\n  }\\n\\n  // swapped template is transitioned automatically\\n  get crazy() {\\n    return transition( // <- this is all!\\n      this.a ? html`<h2>DIZZZZY!</h2>` \\n             : html`<h2>Click me</h2>`,\\n      spin3D);\\n  }\\n  \\n  render() {\\n    return html`<center @click=${() => this.a = !this.a}>\\n      ${this.crazy}\\n    </center>`\\n  } \\n}\\n\";\n    "],"sourceRoot":""}